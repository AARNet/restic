.nh
.TH "restic backup" "1" "Jan 2017" "generated by \fB\fCrestic generate\fR" ""

.SH NAME
.PP
restic\-copy \- Copy snapshots from one repository to another


.SH SYNOPSIS
.PP
\fBrestic copy [flags] [snapshotID ...]\fP


.SH DESCRIPTION
.PP
The "copy" command copies one or more snapshots from one repository to another.

.PP
NOTE: This process will have to both download (read) and upload (write) the
entire snapshot(s) due to the different encryption keys used in the source and
destination repositories. This /may incur higher bandwidth usage and costs/ than
expected during normal backup runs.

.PP
NOTE: The copying process does not re\-chunk files, which may break deduplication
between the files copied and files already stored in the destination repository.
This means that copied files, which existed in both the source and destination
repository, /may occupy up to twice their space/ in the destination repository.
This can be mitigated by the "\-\-copy\-chunker\-params" option when initializing a
new destination repository using the "init" command.


.SH OPTIONS
.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
	help for copy

.PP
\fB\-H\fP, \fB\-\-host\fP=[]
	only consider snapshots for this \fB\fChost\fR, when no snapshot ID is given (can be specified multiple times)

.PP
\fB\-\-key\-hint2\fP=""
	key ID of key to try decrypting the destination repository first (default: $RESTIC\_KEY\_HINT2)

.PP
\fB\-\-password\-command2\fP=""
	shell \fB\fCcommand\fR to obtain the destination repository password from (default: $RESTIC\_PASSWORD\_COMMAND2)

.PP
\fB\-\-password\-file2\fP=""
	\fB\fCfile\fR to read the destination repository password from (default: $RESTIC\_PASSWORD\_FILE2)

.PP
\fB\-\-path\fP=[]
	only consider snapshots which include this (absolute) \fB\fCpath\fR, when no snapshot ID is given

.PP
\fB\-\-repo2\fP=""
	destination \fB\fCrepository\fR to copy snapshots to (default: $RESTIC\_REPOSITORY2)

.PP
\fB\-\-repository\-file2\fP=""
	\fB\fCfile\fR from which to read the destination repository location to copy snapshots to (default: $RESTIC\_REPOSITORY\_FILE2)

.PP
\fB\-\-tag\fP=[]
	only consider snapshots which include this \fB\fCtaglist\fR, when no snapshot ID is given


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-cacert\fP=[]
	\fB\fCfile\fR to load root certificates from (default: use system certificates)

.PP
\fB\-\-cache\-dir\fP=""
	set the cache \fB\fCdirectory\fR\&. (default: use system default cache directory)

.PP
\fB\-\-cleanup\-cache\fP[=false]
	auto remove old cache directories

.PP
\fB\-\-json\fP[=false]
	set output mode to JSON for commands that support it

.PP
\fB\-\-key\-hint\fP=""
	\fB\fCkey\fR ID of key to try decrypting first (default: $RESTIC\_KEY\_HINT)

.PP
\fB\-\-limit\-download\fP=0
	limits downloads to a maximum rate in KiB/s. (default: unlimited)

.PP
\fB\-\-limit\-upload\fP=0
	limits uploads to a maximum rate in KiB/s. (default: unlimited)

.PP
\fB\-\-no\-cache\fP[=false]
	do not use a local cache

.PP
\fB\-\-no\-lock\fP[=false]
	do not lock the repository, this allows some operations on read\-only repositories

.PP
\fB\-o\fP, \fB\-\-option\fP=[]
	set extended option (\fB\fCkey=value\fR, can be specified multiple times)

.PP
\fB\-\-password\-command\fP=""
	shell \fB\fCcommand\fR to obtain the repository password from (default: $RESTIC\_PASSWORD\_COMMAND)

.PP
\fB\-p\fP, \fB\-\-password\-file\fP=""
	\fB\fCfile\fR to read the repository password from (default: $RESTIC\_PASSWORD\_FILE)

.PP
\fB\-q\fP, \fB\-\-quiet\fP[=false]
	do not output comprehensive progress report

.PP
\fB\-r\fP, \fB\-\-repo\fP=""
	\fB\fCrepository\fR to backup to or restore from (default: $RESTIC\_REPOSITORY)

.PP
\fB\-\-repository\-file\fP=""
	\fB\fCfile\fR to read the repository location from (default: $RESTIC\_REPOSITORY\_FILE)

.PP
\fB\-\-tls\-client\-cert\fP=""
	path to a \fB\fCfile\fR containing PEM encoded TLS client certificate and private key

.PP
\fB\-v\fP, \fB\-\-verbose\fP[=0]
	be verbose (specify multiple times or a level using \-\-verbose=\fB\fCn\fR, max level/times is 3)


.SH SEE ALSO
.PP
\fBrestic(1)\fP
